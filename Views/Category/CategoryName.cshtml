@model FoodOrderWeb.Models.ViewModel.CategoryForHomeViewModel

@{
    ViewData["Title"] = "Danh mục - " + (Model.Category?.Name ?? "Không tìm thấy");
}

<style>
    body {
        font-family: 'Segoe UI', sans-serif;
        background-color: #f9fafb;
        background-image: url('/image/homeimage.jpeg');
        background-size: cover;
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-position: center;
    }

    /* Search bar giống search view */
    .search-container {
        max-width: 800px;
        margin: 40px auto;
        position: relative;
    }

    .search-bar {
        border-radius: 50px;
        padding: 12px 20px 12px 45px;
        border: 1px solid #ddd;
        box-shadow: 0 4px 12px rgba(0,0,0,0.05);
    }

        .search-bar:focus {
            border-color: #00bfa6;
            box-shadow: 0 4px 14px rgba(0,191,166,0.25);
        }

    .search-icon {
        position: absolute;
        top: 50%;
        left: 18px;
        transform: translateY(-50%);
        color: #888;
        font-size: 18px;
    }

    .btn-search {
        border-radius: 50px;
        background: linear-gradient(90deg, #a3e635, #4ade80);
        border: none;
        color: #fff;
        padding: 0 20px;
        transition: 0.3s;
    }

        .btn-search:hover {
            background: linear-gradient(270deg, #16a34a, #65a30d);
        }

    /* Section title */
    .section-title {
        font-size: 20px;
        font-weight: 600;
        margin: 40px 0 20px 0;
        color: #fff;
        border-left: 4px solid #00bfa6;
        padding-left: 10px;
    }

    /* Empty state */
    .empty-state {
        font-size: 1rem;
        color: #ccc;
        text-align: center;
        margin: 20px 0;
        font-style: italic;
    }

    /* Food grid */
    .food-grid {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

        .food-grid .food-item {
            flex: 1 1 calc(20% - 20px);
            max-width: calc(20% - 20px);
        }

    .card {
        border: none;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 4px 12px rgba(0,0,0,0.08);
        transition: transform 0.2s, box-shadow 0.2s;
        cursor: pointer;
    }

        .card:hover {
            transform: translateY(-6px);
            box-shadow: 0 8px 18px rgba(0,0,0,0.15);
        }

    .card-img-top {
        height: 180px;
        object-fit: cover;
    }

    .price {
        font-weight: bold;
        color: #e63946;
    }

    /* Category card đồng bộ */
    .category-card {
        min-width: 130px;
        height: 50px;
        border-radius: 25px;
        background: linear-gradient(90deg, #a3e635, #4ade80);
        color: #fff;
        font-weight: 600;
        font-size: 15px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: transform 0.2s, box-shadow 0.2s;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        padding: 0 20px;
    }

        .category-card:hover {
            transform: scale(1.05);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);
            color: black;
            background: linear-gradient(270deg, #16a34a, #65a30d);
        }

    .text-gradient {
        background: linear-gradient(90deg, #a3e635, #4ade80);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .back-gradient {
        background: linear-gradient(90deg, #a3e635, #4ade80);
    }

    a.card-link {
        text-decoration: none !important;
        color: inherit !important;
        display: block;
    }

        a.card-link:hover {
            text-decoration: none !important;
            color: inherit !important;
        }

</style>

<div class="container">

    <!-- Thanh search đồng bộ -->
    <div class="search-container">
        <i class="fa-solid fa-magnifying-glass search-icon"></i>
        <form asp-controller="Home" asp-action="Search" method="get" class="d-flex">
            <input type="search" name="query"
                   class="form-control search-bar"
                   placeholder="Tìm món ăn, combo, danh mục..." />
            <button type="submit" class="btn btn-search ms-2">Tìm</button>
        </form>
    </div>

    <h2 class="mb-4 text-white">
        Danh mục: <span class="text-gradient">@Model.Category?.Name</span>
    </h2>

    <!-- Voucher -->
    <h4 class="section-title">Voucher</h4>
    <div class="row">
        @if (Model.Vouchers?.Any() == true)
        {
            @foreach (var voucher in Model.Vouchers)
            {
                <div class="col-md-4 mb-4">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5>@voucher.Code</h5>
                            <p>@voucher.Description</p>
                            <p class="text-danger fw-bold">
                                Giảm: @voucher.DiscountPercent @voucher.DiscountAmount
                            </p>
                            <span class="badge back-gradient">HSD: @voucher.EndDate.ToShortDateString()</span>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="empty-state">Không có voucher nào cho danh mục này.</div>
        }
    </div>

    <!-- Món ăn -->
    <h4 class="section-title">Món ăn</h4>
    <div class="row food-grid">
        @if (Model.Category?.MenuItems?.Any() == true)
        {
            @foreach (var item in Model.Category.MenuItems)
            {
                <div class="food-item mb-4">
                    <a asp-controller="Details" asp-action="FoodDetails" asp-route-id="@item.MenuItemId" class="card-link">
                        <div class="card h-100">
                            <img src="@item.ImageUrl" class="card-img-top" alt="@item.Name" />
                            <div class="card-body">
                                <h5>@item.Name</h5>
                                <p>@item.Description</p>
                                <p class="price">@item.Price.ToString("C")</p>
                                <span class="badge @(item.IsAvailable ? "back-gradient" : "bg-secondary")">
                                    @(item.IsAvailable ? "Có sẵn" : "Tạm hết")
                                </span>
                            </div>
                        </div>
                    </a>
                </div>
            }
        }
        else
        {
            <div class="empty-state">Không có món ăn nào trong danh mục này.</div>
        }
    </div>

    <!-- Combo -->
    <h4 class="section-title">Combo</h4>
    <div class="row">
        @if (Model.Combos?.Any() == true)
        {
            @foreach (var combo in Model.Combos)
            {
                <div class="col-md-4 mb-4">
                    <a asp-controller="Details" asp-action="ComboDetails" asp-route-id="@combo.ComboId" class="card-link">
                        <div class="card h-100">
                            <div class="card-body">
                                <h5>@combo.Name</h5>
                                <p>@combo.Description</p>
                                <p class="price">@combo.Price.ToString("C")</p>
                                <span class="badge @(combo.IsAvailable ? "back-gradient" : "bg-secondary")">
                                    @(combo.IsAvailable ? "Còn hàng" : "Hết hàng")
                                </span>
                            </div>
                        </div>
                    </a>
                </div>
            }
        }
        else
        {
            <div class="empty-state">Không có combo nào chứa món thuộc danh mục này.</div>
        }
    </div>

    <!-- Danh mục khác -->
    <div class="category-section">
        <h4 class="section-title">Danh mục khác</h4>
        <div class="d-flex flex-wrap gap-3">
            @if (Model.Categories?.Any() == true)
            {
                @foreach (var cat in Model.Categories)
                {
                    <div class="category-card"
                         onclick="location.href='@Url.Action("CategoryName", "Category", new { id = cat.CategoryId })'">
                        <span>@cat.Name</span>
                    </div>
                }
            }
            else
            {
                <div class="empty-state text-center py-5 w-100">
                    Không có danh mục nào.
                </div>
            }
        </div>
    </div>

    <hr class="my-4 text-light" />

</div>
